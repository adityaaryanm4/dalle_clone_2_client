import React, { useState, useEffect } from 'react'
import { Loader, FormField, Card } from '../components'

const RenderCard = ({ data, title }) => {
  if (data?.length > 0) {
    return (data.map((post) => <Card key={post._id} {...post} />))
  }
  return <h1 className='text-[#6469ff] font-bold text-xl uppercase '>{title}</h1> // mt-5
}

const Home = () => {
  //fetchPost
  async function fetchPost() {
    setLoading(true)
    try {
      const response = await fetch('https://adi-dalle-server.cyclic.app/api/v1/post', {
        method: 'GET',
        headers: {
          "Content-Type": "application/json"
        },
      })
      const data = await response.json()
      setAllPosts(data.result)
    } catch (err) {
      console.log(err)
    }
    finally {
      setLoading(false)
    }
  }
  //useEffect
  useEffect(() => { fetchPost() }, [])
  //useState
  const [loading, setLoading] = useState(false)
  const [searchText, setSearchText] = useState('')
  const [allPosts, setAllPosts] = useState([])
  const [searchedPosts, setSearchedPosts] = useState([])
  const [timeoutID, setTimeoutID] = useState(null)
  //functions
  const handleChange = (e) => {
    clearTimeout(timeoutID)
    setSearchText(e.target.value)
    const t_id = setTimeout(() => {
      const filteredPosts = allPosts.filter((post) =>

        post.name.toLowerCase().includes(searchText) || post.prompt.toLowerCase().includes(searchText)

      )
      setSearchedPosts(filteredPosts)
    }, 500)
    setTimeoutID(t_id)
  }
  return (
    <section className='max-w-7xl mx-auto0 '>
      <div className='max-w-[800px]'>
        <h1 className='text-[#222328] text-[32px] font-extrabold'>The Community Showcase</h1>
        <p className='text-[#666e75] text-[16px] mt-2'>Browse through a collection of imaginative and visually stunning images generated by DALL_E AI</p>
      </div>
      <form className='mt-8 py-2 max-w-[800px]'>
        <FormField
          labelName='search posts'
          type='text'
          name='search posts'
          placeholder='Search Posts'
          value={searchText}
          handleChange={handleChange}
        />
      </form>
      <div className='mt-10'>
        {loading ? <div className='flex justify-center'>
          {/* items-center */}
          <Loader /></div>
          :
          (<div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 gap-3'>
            {/* grid-cols-1 */}
            {searchText ? (<RenderCard data={searchedPosts} title='No search results found !' />) : (<RenderCard data={allPosts} title='No posts found' />)}

          </div>)}
      </div>
    </section>
  )
}

export default Home